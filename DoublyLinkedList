package lab1;

public class DoublyLinkedList<E> {

    private static class Node<E> {
        E element;
        Node<E> prev;
        Node<E> next;

        public Node(E element, Node<E> prev, Node<E> next) {
            this.element = element;
            this.prev = prev;
            this.next = next;
        }
    }

    private Node<E> header;
    private Node<E> trailer;

    public DoublyLinkedList() {
        header = new Node<>(null, null, null);
        trailer = new Node<>(null, header, null);
        header.next = trailer;
    }

    public boolean isEmpty() {
        return header.next == trailer;
    }

    public void addLast(E element) {
        Node<E> newNode = new Node<>(element, trailer.prev, trailer);
        trailer.prev.next = newNode;
        trailer.prev = newNode;
    }

    public void concatenate(DoublyLinkedList<E> otherList) {
        if (otherList.isEmpty()) {
            return;
        }

        this.trailer.prev.next = otherList.header.next;
        otherList.header.next.prev = this.trailer.prev;
        this.trailer = otherList.trailer;
        otherList.header.next = otherList.trailer;
        otherList.trailer.prev = otherList.header;
    }

    public void printList() {
        Node<E> current = header.next;
        while (current != trailer) {
            System.out.print(current.element + " ");
            current = current.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        DoublyLinkedList<Integer> L = new DoublyLinkedList<>();
        DoublyLinkedList<Integer> M = new DoublyLinkedList<>();

        // Adding elements to L
        L.addLast(1);
        L.addLast(2);
        L.addLast(3);

        // Adding elements to M
        M.addLast(4);
        M.addLast(5);

        // Print both lists before concatenation
        System.out.println("List L before concatenation:");
        L.printList();
        System.out.println("List M before concatenation:");
        M.printList();

        // Concatenating L and M into L
        L.concatenate(M);

        // Print list L after concatenation
        System.out.println("List L after concatenation:");
        L.printList();
    }
}
